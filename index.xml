<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Spike</title><link>https://spike-2.github.io/</link><description>Recent content on Spike</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 12 Dec 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://spike-2.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Write that down!</title><link>https://spike-2.github.io/changelog/2021-12-12/</link><pubDate>Sun, 12 Dec 2021 00:00:00 +0000</pubDate><guid>https://spike-2.github.io/changelog/2021-12-12/</guid><description>Infrastructure / Bot Added the Winston library for logging (#19, #71) SpikeKit Added a Winston logger for logging. Please see the SpikeKit Logging Documentation for more information on usage. Do not use console.log or console.error moving forward. (#19, #71) Plugins Core Get the URL to a user&amp;rsquo;s avatar image. See $help getavatar (#72)</description></item><item><title>The First Changelog!</title><link>https://spike-2.github.io/changelog/2021-11-30/</link><pubDate>Tue, 30 Nov 2021 00:00:00 +0000</pubDate><guid>https://spike-2.github.io/changelog/2021-11-30/</guid><description>Note: Some features were live for much longer.
Infrastructure / Bot Now running on Discord.js version 13 (#32, #63) Officially launch wiki (#7, #13, #20, #25) Set Spike&amp;rsquo;s Activity Status (#48, #49, #56) New text emoji /shocked (#60) Verification Quality of Life Improvements (#64, #67, #66, #68) SpikeKit SpikeKit now supports Reactions and Startup Functions (#6) Plugins New Plugins Betting (#8, #28, #29, #30) Competitive Programming (#15, #44) Core Reminder pings the creator (#11, #39) Paginate help menu (#38, #54) Bug Report, Feature Request, Pull Request updates (#12, #21) Spike-Lisp New Spike-Lisp functions, store/call functions, operators (#9, #23, #24, #51) Spike Store Spike Store improvements; Prep for new items (#37, #41) ITS Service Notes ITS Service Notes defense (#14, #52)</description></item><item><title>Bet</title><link>https://spike-2.github.io/docs/manual-pages/bet/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://spike-2.github.io/docs/manual-pages/bet/</guid><description>With Spike, you can now run bets. These allow users to set up wagering scenarios where all users, including the bet creator, can stand to win or lose a lot of Spike Bucks.
Creating a Bet Create a bet using a command with this form:
$bet Title Description of the bet :emoji: bet_amount win_amount What this wager means :emoji: bet_amount win_amount What this wager means ... Please ensure emoji get fully rendered.</description></item><item><title>Bug Reports</title><link>https://spike-2.github.io/docs/contributing/bug-reports/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://spike-2.github.io/docs/contributing/bug-reports/</guid><description>So, you&amp;rsquo;ve found a bug in Spike and want to report it, eh? It&amp;rsquo;s a fairly simple endeavor, but please be sure to follow instructions carefully so we get all the information we need to reproduce and fix the bug!
To submit a Bug Report, visit this link, or file a new issue and select &amp;ldquo;Bug Report&amp;rdquo; from the menu. You&amp;rsquo;ll be presented with a template containing a few important questions to answer.</description></item><item><title>Competitive Programming</title><link>https://spike-2.github.io/docs/manual-pages/competitive-programming/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://spike-2.github.io/docs/manual-pages/competitive-programming/</guid><description>Code execution is powered by Piston, the same execution engine used by the I Run Code bot. Type /run to see a full list of supported languages.
Run $challenges to see active challenges. You&amp;rsquo;ll get their IDs there as well.
To submit code, send a message with the following format:
$submitcode ID ```language code here ``` You will receive input via STDIN and are expected to output your results via STDOUT.</description></item><item><title>Core</title><link>https://spike-2.github.io/docs/manual-pages/core/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://spike-2.github.io/docs/manual-pages/core/</guid><description>This module contains some of the core functions of Spike.
$remindme $remindme [HH:MM:SS] [text]
Sends a reminder message to the same channel in the given time.
$embedify $embedify [title] ; [content]
Creates a message embed with the given title and content.
$echo $echo [text]
Sends a message as Spike. To use this command, you need to purchase access in the Spike Store.
$clear $clear [2 &amp;lt;= x &amp;lt;= 100]
Deletes the last x messages from the channel, including the command invocation.</description></item><item><title>Cron Plugin</title><link>https://spike-2.github.io/docs/contributing/spikekit/cron-plugin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://spike-2.github.io/docs/contributing/spikekit/cron-plugin/</guid><description>Cron Plugins execute code on an interval.
To start developing a SpikeKit Cron Plugin Fork this repository to create your own working copy. Copy /src/plugins/blueprintCronPlugin and rename the folder to something unique. Edit main.js and add supplementary files as required. Submit a Pull Request with your plugin. Spike Collaborators will review your plugin and suggest any required changes. Once approved, your plugin will go live with the next update of Spike.</description></item><item><title>Enigma</title><link>https://spike-2.github.io/docs/manual-pages/enigma/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://spike-2.github.io/docs/manual-pages/enigma/</guid><description>Created by: Brandon Ingli
$enigma $enigma [message] [r1] [r1o] [r2] [r2o] [r3] [r3o] [ref]
Encode or decode a message using Spike&amp;rsquo;s enigma machine.
Parameter Details Default message String to encode/decode (Required; no default) r1 Name of rotor to use in rightmost position I r1o Starting offset for rightmost rotor, 0&amp;lt;=x&amp;lt;=25 0 r2 Name of rotor to use in center position II r2o Starting offset for center rotor, 0&amp;lt;=x&amp;lt;=25 0 r3 Name of rotor to use in leftmost position III r3o Starting offset for leftmost rotor, 0&amp;lt;=x&amp;lt;=25 0 ref Name of reflector to use B Rotor Names: I, II, III, IV, V</description></item><item><title>Feature Requests</title><link>https://spike-2.github.io/docs/contributing/feature-requests/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://spike-2.github.io/docs/contributing/feature-requests/</guid><description>So, you want a new feature in Spike, eh? It&amp;rsquo;s a fairly simple endeavor, but please be sure to follow instructions carefully so we get all the information we need to develop this feature!
To submit a Bug Report, visit this link, or file a new issue and select &amp;ldquo;Feature Request&amp;rdquo; from the menu. You&amp;rsquo;ll be presented with a template containing a few important questions to answer.
&amp;lt;!-- Thanks for taking the time to request a feature!</description></item><item><title>Gamble</title><link>https://spike-2.github.io/docs/manual-pages/gamble/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://spike-2.github.io/docs/manual-pages/gamble/</guid><description>Welcome to the only casino in the world that accepts Spike Bucks! Learn more about our games and services below.
Games $cointoss $cointoss [wager] [heads|tails]
The simple game of tossing a coin tries to stay as true to reality as possible. While a coin toss is fairly close to 50/50 odds, it isn&amp;rsquo;t perfectly fair. In fact, depending on the person tossing the coin, the type of coin, and the coin-face chosen, the odds of winning are often closer to 49/51.</description></item><item><title>Logging</title><link>https://spike-2.github.io/docs/contributing/spikekit/logging/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://spike-2.github.io/docs/contributing/spikekit/logging/</guid><description>Logging with SpikeKit is powered by Winston. This allows us to selectively log things that happen and better respond to errors in Spike. Do not use console.log or console.error to log messages. Instead, use one of the log levels below with the SpikeKit logger.
Log Levels Log levels in SpikeKit go along with npm convention. Here are the log levels we use, in order of highest to lowest priority:
Level Function Call Meaning Error spikeKit.</description></item><item><title>Project Board</title><link>https://spike-2.github.io/docs/contributing/project-board/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://spike-2.github.io/docs/contributing/project-board/</guid><description>We use a Kanban-style project board to keep organized with feature and bug requests, as well as outstanding pull requests for code changes. As you follow your issue (you did file an issue for a bug report or feature request, right?) or PR, you&amp;rsquo;ll notice it head through several columns in the board. Here&amp;rsquo;s what they mean.
Collaborators: Note that Issues are not automatically progressed through the board. You&amp;rsquo;ll have to do that manually.</description></item><item><title>Slisp</title><link>https://spike-2.github.io/docs/manual-pages/slisp/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://spike-2.github.io/docs/manual-pages/slisp/</guid><description>Slisp is still in development and will be available in a future release of Spike.
Slisp is a dialect of the Lisp Programming Language that runs directly from within Spike! This specific dialect is a decedent of eLispsis, which is a minimal Lisp dialect build on NodeJS.
Lisp is a functional language. There are no variables. Everything is a function call. To learn a bit more about the basic syntax of Lisp, take a look at the Lisp Wikipedia Page.</description></item><item><title>Spike Bucks</title><link>https://spike-2.github.io/docs/manual-pages/spike-bucks/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://spike-2.github.io/docs/manual-pages/spike-bucks/</guid><description>What are Spike Bucks? Spike Bucks are the currency of Spike. You can use them in a variety of places.
How do I earn Spike Bucks? Sending messages in the server Gambling in the Gamble module A gift from a friend (in the Gamble module) In bets How do I check my balance? Use $wallet from the Gamble module.
What can I spend Spike Bucks on? Items in the Spike Store Gifting to other members (in the Gamble module) Gambling (in the Gamble module) Hosting bets How do I buy things in the Spike Store?</description></item><item><title>Spike Store</title><link>https://spike-2.github.io/docs/manual-pages/spike-store/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://spike-2.github.io/docs/manual-pages/spike-store/</guid><description>The Spike Store is the premier retail outlet for Spike Bucks!
See what&amp;rsquo;s for sale Run $help shop to see what&amp;rsquo;s currently for sale along with pricing.
How to purchase something Issue the appropriate command given in the shop. For example, $buy textemojis.
How are purchases maintained? Purchases assign you a special server role indicating that you have that perk. These roles are maintained by the server, not Spike directly.</description></item><item><title>Standard Plugin</title><link>https://spike-2.github.io/docs/contributing/spikekit/standard-plugin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://spike-2.github.io/docs/contributing/spikekit/standard-plugin/</guid><description>Standard Plugins accept and act upon commands given with the bot&amp;rsquo;s prefix.
To start developing a SpikeKit Standard Plugin Fork this repository to create your own working copy. Copy /src/plugins/blueprintPlugin and rename the folder to something unique. Edit main.js and add supplementary files as required. Submit a Pull Request with your plugin. Spike Collaborators will review your plugin and suggest any required changes. Once approved, your plugin will go live with the next update of Spike.</description></item><item><title>Submitting a Pull Request</title><link>https://spike-2.github.io/docs/contributing/submitting-a-pull-request/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://spike-2.github.io/docs/contributing/submitting-a-pull-request/</guid><description>So, you want to add a new feature in Spike, eh? It&amp;rsquo;s a fairly simple endeavor, but please be sure to follow instructions carefully so we get all the information we need to approve this feature!
Before You Begin Work on an Existing Issue Please make sure that an Issue is in the Accepted/To-Do state before beginning work on it. You can check by looking at the Projects section of the sidebar for where it is on the Roadmap.</description></item></channel></rss>